apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: data-eventstore
  name: data-eventstore
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: data-mongodb
  name: data-mongodb
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: eventstore
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: eventstore
  template:
    metadata:
      labels:
        app: eventstore
    spec:
      containers:
      - image: eventstore/eventstore:latest
        name: eventstore
        ports:
        - containerPort: 1113
          name: eventstore
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/eventstore
          name: data-eventstore
      hostname: eventstore
      restartPolicy: Always
      volumes:
      - name: data-eventstore
        persistentVolumeClaim:
          claimName: data-eventstore
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: eventstore
spec:
  ports:
  - port: 1113
  selector:
    app: eventstore
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: 01031990Pc
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        image: mongo
        name: mongodb
        ports:
        - containerPort: 27017
          name: mongodb
        resources:
        volumeMounts:
        - mountPath: /etc/mongo
          name: data-mongodb
      hostname: mongodb
      restartPolicy: Always
      volumes:
      - name: data-mongodb
        persistentVolumeClaim:
          claimName: data-mongodb
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
  - port: 27017
  selector:
    app: mongodb
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: webapi
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      app: webapi
  template:
    metadata:
      labels:
        app: webapi
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: ASPNETCORE_URLS
          value: http://*:5200
        - name: EVENTSTORE_CONNECTIONSTRING
          value: tcp://eventstore:1113
        - name: MONGODB_CONNECTIONSTRING
          value: mongodb://root:01031990Pc@mongodb:27017
        image: andrekirst/haushaltsbuchwebapi:v2
        name: webapi
        ports:
        - containerPort: 5200
          name: webapi
        resources: {}
      hostname: webapi
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: webapi
spec:
  ports:
  - port: 5200
  selector:
    app: webapi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: uiweb
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      app: uiweb
  template:
    metadata:
      labels:
        app: uiweb
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: ASPNETCORE_URLS
          value: http://*:80
        - name: WEBAPI_CONNECTIONSTRING
          value: http://webapi:5200/api/
        image: andrekirst/haushaltsbuchuiweb:v2
        name: uiweb
        ports:
        - containerPort: 80
          name: uiweb
        resources: {}
      hostname: uiweb
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: uiweb
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: uiweb